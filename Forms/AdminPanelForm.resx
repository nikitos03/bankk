<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>